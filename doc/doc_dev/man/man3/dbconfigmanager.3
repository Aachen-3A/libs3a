.TH "dbconfigmanager" 3 "30 Jan 2015" "libs3a" \" -*- nroff -*-
.ad l
.nh
.SH NAME
dbconfigmanager \- 
.PP
Tool to manage config files of samples stored in a database.  

.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBDBConfigManager\fP"
.br
.RI "\fIDatabase config manager class. \fP"
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "def \fBmain\fP"
.br
.RI "\fI\fBmain()\fP method for testing purposes \fP"
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "tuple \fBlog\fP = logging.getLogger('dbconfigmanager')"
.br
.RI "\fILogger object. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Tool to manage config files of samples stored in a database. 

This is a tool to manage cross sections, number of events and weights for various samples, which are stored in the \fBaix3adb\fP database. Upon creating the \fBDBConfigManager\fP object, one sets a working directory in which the xsv123.cfg files are stored. To sync a list of samples with the database, one has to pass it to update_config function. The tool then takes the provided config file or the latest revision it can find in the working directory and compares its entries with the ones stored in the database.
.PP
Example usage
.PP
Create the object and pass the working directory as an argument import \fBdbconfigmanager\fP cfgmgr = \fBdbconfigmanager.DBConfigManager\fP('../cfg/xs/')
.PP
Read a specific config file cfgmgr.read_config('../cfg/xs/xsv300.cfg')
.PP
Update the loaded or a specific config with a list of samples update_succesful = cfgmgr.update_config(['blub']) update_succesful = cfgmgr.update_config(['blub'], '../cfg/xs/xsv300.cfg')
.PP
Instead of frequently querying the database, one can use auto_update. This will only perform a query, if the latest revision is older than the second argument (24 hours in this example). cfgmgr.auto_update(['blub'], 24)
.PP
Retrieving the read python config cfgmgr.get_config() 
.SH "Function Documentation"
.PP 
.SS "def dbconfigmanager::main ()"
.PP
\fBmain()\fP method for testing purposes 
.PP
Definition at line 291 of file dbconfigmanager.py.
.SH "Variable Documentation"
.PP 
.SS "tuple \fBdbconfigmanager::log\fP = logging.getLogger('dbconfigmanager')"
.PP
Logger object. 
.PP
Definition at line 48 of file dbconfigmanager.py.
.SH "Author"
.PP 
Generated automatically by Doxygen for libs3a from the source code.
